//2.1
alert("I'm JavaScript");

//2.4
//변수가지고 놀기
let admin, name;
name = "John";
admin = name;
alert(admin);

//올바른 이름 선택하기
let planet ="earth";
let UserName = "John";

//대문자 상수 올바로 사용하기
let birthday //대문자 상수에 적합하다.
let age //대문자 상수에 적합하지 않다.

//2.5
//문자열 따옴표
Ilya
hello 1
hello name
hello Ilya

//2.6
//간단한 페이지 만들기
let name = prompt("이름이 뭐임?", "");
alert(name);

//2.9
//비교
5 > 4 // o 
"apple" > "pineapple" //x
"2" > "12" //o
undefined == null //o
undefined === null //x
null == "\n0\n" //x
null === +"\n0\n" //x

//2.10
//if 와 문자열 0
if ("0"){
  alert("Hello");//비어있는 문자열을 제외한 모든 문자열은 true를 반환
}

//자바스크립트의 공식 이름
let value = prompt("javaScript의 공식 이름은 무엇일까요", "");
 if(value == "ECMAScript"){
   alert("정답입니다");
 }else{
   alert("그것도 모르세요? 병신이세요?");
 }

 //입력받은 숫자의 부호 표시하기
 let a = prompt("숫자 입력바람", "");
 if(a > 0){
   alert(1);
 }else if(a < 0){
   alert(-1);
 }else(a == 0){
   alert(0);
 }

//'if'를 '?'로 교체하기
let result;

if(a + b < 4){
  result = '미만';
}else{
  result = '이상';
}

let result = (a + b < 4)? '미만' : '이상';

//'if..else'를 '?'로 교체하기
let message;

if (login == '직원') {
  message = '안녕하세요.';
} else if (login == '임원') {
  message = '환영합니다.';
} else if (login == '') {
  message = '로그인이 필요합니다.';
} else {
  message = '';
}

let message = (login == '직원')? '안녕하세요.' : 
  (login == '임원')? '환영합니다.' :
  (login == '')? '로그인이 필요합니다.' : 
  '';

//2.11
//OR 연산의 결과는 무엇일까요?
2

//OR연산자의 피연산자가 alert 라면?
1, 2

//다음 AND 연산의 결과는 무엇일까요?
null

//AND연산자의 피연산자가 alert라면?
1, undefined

//OR AND OR 연산자로 구성된 표현식
3

//사이 범위 확인하기
let age;

if(age >= 14 && age <= 90)

//바깥 범위 확인하기
if(!(age >= 14 && age <= 90))

//"if"에 관한 고찰(아래 표현식에서 어떤 alert가 실행될까?)
if (-1 || 0) alert( 'first' ); //
if (-1 && 0) alert( 'second' );
if (null || -1 && 1) alert( 'third' );
*******************************************************

//로그인 구현하기
/*
프롬프트(prompt) 대화상자를 이용해 간이 로그인 창을 구현해보세요.

사용자가 "Admin"를 입력하면 비밀번호를 물어보는 프롬프트 대화상자를 띄워주세요. 이때 아무런 입력도 하지 않거나 Esc를 누르면 "취소되었습니다."라는 메시지를 보여주세요. 틀린 비밀번호를 입력했다면 "인증에 실패하였습니다."라는 메시지를 보여주세요.

비밀번호 확인 절차는 다음과 같습니다.

맞는 비밀번호 "TheMaster"를 입력했다면 "환영합니다!"라는 메시지를 보여주세요.
틀린 비밀번호를 입력했다면 "인증에 실패하였습니다."라는 메시지를 보여주세요.
빈 문자열을 입력하거나 입력을 취소했다면 "취소되었습니다."라는 메시지를 보여주세요.
*/

//2.13
//반복문의 마지막 값
let i = 3;

while (i) {
  alert( i-- );
}

1

//while 반복문의 출력값 예상하기
let i = 0;
while(++i < 5) alert(i);
1234

let i = 0;
while(i++ < 5) alert(i);
12345

//'for'반복문의 출력값 예상하기
for (let i = 0; i < 5; i++) alert( i );
01234

for (let i = 0; i < 5; ++i) alert( i );
01234

//for 반복문을 이용하여 짝수 출력하기
let i;

for(i = 2; i <= 10; i++){
  if( i % 2 ==0){
    alert(i);
  }
}

//'for'반복문을 'while'반복문으로 바꾸기
for (let i = 0; i < 3; i++) {
  alert( `number ${i}!` );
}

let i = 0;
while(i < 3){
  alert( `number ${i}!` );
  i++;
}

//사용자가 유효한 값을 입력할 때까지 프롬프트 창 띄우기
//do while로 어카지 흠

//소수 출력하기 (다시 확인해보자)
let n = 10;

nextPrime:
for(let i = 2; i <= n; i++){
  
  for(let j = 2; j < i; j++){
    if(i % j == 0) continue nextPrime;
  }
  alert(i);
}

//2.14
//"switch"문을 "if"문으로 변환하기
switch (browser) {
  case 'Edge':
    alert( "Edge를 사용하고 계시네요!" );
    break;

  case 'Chrome':
  case 'Firefox':
  case 'Safari':
  case 'Opera':
    alert( '저희 서비스가 지원하는 브라우저를 사용하고 계시네요.' );
    break;

  default:
    alert( '현재 페이지가 괜찮아 보이길 바랍니다!' );
}

if(browser  == "Edge"){
  alert("Edge를 사용하고 계시군요!");
}else if(browser == "Chrome" || browser == "Firefox" || browser == "Safari"
|| browser == "Opera"){
  alert( '저희 서비스가 지원하는 브라우저를 사용하고 계시네요.' );
}else{
  alert( '현재 페이지가 괜찮아 보이길 바랍니다!' );
}

//"if"문을 "switch"문으로 변환하기
let a = +prompt('a?', '');

if (a == 0) {
  alert( 0 );
}
if (a == 1) {
  alert( 1 );
}

if (a == 2 || a == 3) {
  alert( '2,3' );
}

let a = +prompt('a?', '');

switch(a){
  case 0:
  alert(0);
  break;

  case 1:
  alert(1);
  break;

  case 2:
  case 3:
  alert('2,3');
  break;
}

//2.15
//"else"는 정말 필요한가요?
동일하게 작동함.

//'?'나 '||'를 사용하여 함수 다시 작성하기
function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    return confirm('보호자의 동의를 받으셨나요?');
  }
}

function checkAge(age){
  return(age > 18)? true : confirm('보호자의 동의를 받으셨나요?');
}

//min(a, b)함수 만들기
min(2, 5) == 2
min(3, -1) == -1
min(1, 1) == 1

function min (a, b){
  if(a < b){
    return a;
  }else{
    return b;
  }
}

//pow(x,n 함수 만들기) 이거는 다시 해보자 생각보다 흠
pow(3, 2) = 3 * 3 = 9
pow(3, 3) = 3 * 3 * 3 = 27
pow(1, 100) = 1 * 1 * ...* 1 = 1

//이 코드 그냥 복붙한거임 다시 해봐야함
function pow(x, n) {
  let result = x;

  for (let i = 1; i < n; i++) {
    result *= x;
  }

  return result;
}

let x = prompt("x?", '');
let n = prompt("n?", '');

if (n < 1) {
  alert(`${n}은 양의 정수이어야 합니다.`);
} else {
  alert( pow(x, n) );
}

//2.17
//화살표 함수로 변경하기
function ask(question, yes, no) {
  if (confirm(question)) yes()
  else no();
}

ask(
  "동의하십니까?",
  function() { alert("동의하셨습니다."); },
  function() { alert("취소 버튼을 누르셨습니다."); }
);

맨 마지막 부분만 바꾼다
() => alert("동의하셨습니다."),
() => alert("취소 버튼을 누르셨습니다.")

//8.1
//프로토타입 이해하기
let animal = {
  jumps: null
};
let rabbit = {
  __proto__: animal,
  jumps: true
};

alert( rabbit.jumps ); // ? (1)

delete rabbit.jumps;

alert( rabbit.jumps ); // ? (2)

delete animal.jumps;

alert( rabbit.jumps ); // ? (3)

//검색 알고리즘
let head = {
  glasses: 1
};

let table = {
  pen: 3
};

let bed = {
  sheet: 1,
  pillow: 2
};

let pockets = {
  money: 2000
};

let head = {
  glasses: 1
};

let table = {
  pen: 3
  __proto__: head
};

let bed = {
  sheet: 1,
  pillow: 2
  __proto__: table
};

let pockets = {
  money: 2000
  __proto__: bed
};

//어디에서 쓸까요?
let animal = {
  eat() {
    this.full = true;
  }
};

let rabbit = {
  __proto__: animal
};

rabbit.eat();

정답 rabbit

//왜 햄스터 두 마리의 배는 꽉 찰까요?
let hamster = {
  stomach: [],

  eat(food) {
    this.stomach.push(food);
  }
};

let speedy = {
  __proto__: hamster
  //stomach: []
};

let lazy = {
  __proto__: hamster
  //stomach: []
};

// 햄스터 한 마리가 음식을 찾았습니다.
speedy.eat("apple");
alert( speedy.stomach ); // apple

// 이 햄스터도 같은 음식을 가지고 있습니다. 왜 그럴까요? 고쳐주세요.
alert( lazy.stomach ); // apple
